﻿using Colossal.Menu;
using Colossal.Patches;
using ExitGames.Client.Photon;
using GorillaNetworking;
using HarmonyLib;
using Photon.Pun;
using Photon.Realtime;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using UnityEngine.XR;

namespace Colossal.Mods
{
    public class GrabAll : MonoBehaviour
    {
        private static float timer = 0f;
        public void Update()
        {
            if (PluginConfig.graball)
            {
                if (Time.time > timer)
                {
                    GorillaGuardianManager gman = GameObject.Find("GT Systems/GameModeSystem/Gorilla Guardian Manager").GetComponent<GorillaGuardianManager>();
                    if (gman.IsPlayerGuardian(NetworkSystem.Instance.LocalPlayer))
                    {
                        if (PluginConfig.alwaysguardian)
                        {
                            PluginConfig.alwaysguardian = false;
                        }
                        foreach (VRRig plr in GorillaParent.instance.vrrigs)
                        {
                            WhatAmI.GetNetworkViewFromVRRig(plr).SendRPC("GrabbedByPlayer", RpcTarget.All, new object[] { true, false, false });
                            WhatAmI.GetNetworkViewFromVRRig(plr).SendRPC("DroppedByPlayer", RpcTarget.All, new object[] { new Vector3(0, 9999999999, 0) });

                            RPCProtection.SkiddedRPCProtection();
                        }
                    }
                    else
                    {
                        if (!PluginConfig.alwaysguardian)
                        {
                            PluginConfig.alwaysguardian = true;
                        }
                    }

                    timer = Time.time + 0.1f;
                }
            }
            else
            {
                Destroy(this.GetComponent<GrabAll>());
            }
        }
    }
}
