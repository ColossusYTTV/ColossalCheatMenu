//using Colossal.Menu;
//using Colossal.Patches;
//using ExitGames.Client.Photon;
//using GorillaNetworking;
//using GorillaTag.Cosmetics;
//using HarmonyLib;
//using Photon.Pun;
//using Photon.Realtime;
//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Reflection;
//using System.Text;
//using System.Threading.Tasks;
//using UnityEngine;
//using UnityEngine.XR;
//using Valve.VR;

//namespace Colossal.Mods
//{
//    public class CrashGun : MonoBehaviour
//    {
//        private GameObject pointer;
//        private LineRenderer radiusLine;
//        private Material lineMaterial = new Material(Shader.Find("GUI/Text Shader"));

//        private static float Garfield = 0f;
//        public static Firecracker[] archivefirecrackers = null;
//        public void Update()
//        {
//            if (PluginConfig.crashgun && PhotonNetwork.InRoom)
//            {
//                switch (PluginConfig.BeamColour)
//                {
//                    case 0:
//                        lineMaterial.color = new Color(0.6f, 0f, 0.8f, 0.5f);
//                        break;
//                    case 1:
//                        lineMaterial.color = new Color(1f, 0f, 0f, 0.5f);
//                        break;
//                    case 2:
//                        lineMaterial.color = new Color(1f, 1f, 0f, 0.5f);
//                        break;
//                    case 3:
//                        lineMaterial.color = new Color(0f, 1f, 0f, 0.5f);
//                        break;
//                    case 4:
//                        lineMaterial.color = new Color(0f, 0f, 1f, 0.5f);
//                        break;
//                }

//                if (pointer == null)
//                {
//                    pointer = GameObject.CreatePrimitive(PrimitiveType.Sphere);
//                    UnityEngine.Object.Destroy(pointer.GetComponent<Rigidbody>());
//                    UnityEngine.Object.Destroy(pointer.GetComponent<SphereCollider>());
//                    pointer.transform.localScale = new Vector3(0.1f, 0.1f, 0.1f);
//                    pointer.GetComponent<Renderer>().material = WhatAmI.purpleMat;
//                }


//                RaycastHit raycastHit2;
//                LayerMask combinedLayerMask = GorillaLocomotion.GTPlayer.Instance.locomotionEnabledLayers | 16384;
//                Physics.Raycast(GorillaLocomotion.GTPlayer.Instance.rightControllerTransform.position - GorillaLocomotion.GTPlayer.Instance.rightControllerTransform.up, -GorillaLocomotion.GTPlayer.Instance.rightControllerTransform.up, out raycastHit2, float.PositiveInfinity, combinedLayerMask);
//                pointer.transform.position = raycastHit2.point;

//                if (Controls.RightJoystick())
//                {
//                    if (radiusLine == null)
//                    {
//                        radiusLine = new GameObject("RadiusLine")
//                        {
//                            transform =
//                            {
//                                parent = pointer.transform
//                            }
//                        }.AddComponent<LineRenderer>();
//                        radiusLine.positionCount = 2;
//                        radiusLine.startWidth = 0.05f;
//                        radiusLine.endWidth = 0.05f;
//                        radiusLine.material = lineMaterial;
//                        radiusLine.startColor = lineMaterial.color;
//                        radiusLine.endColor = lineMaterial.color;
//                    }
//                    radiusLine.SetPosition(0, raycastHit2.point);
//                    radiusLine.SetPosition(1, GorillaLocomotion.GTPlayer.Instance.rightControllerTransform.position);
//                    radiusLine.GetPosition(0);

//                    switch (PluginConfig.AntiScreenShare)
//                    {
//                        case 1:
//                            if (radiusLine.gameObject.layer != 25)
//                            {
//                                radiusLine.gameObject.layer = 25;
//                            }
//                            break;
//                        case 2:
//                            if (radiusLine.gameObject.layer != 16)
//                            {
//                                radiusLine.gameObject.layer = 16;
//                            }
//                            break;
//                    }

//                    VRRig player = raycastHit2.collider.GetComponentInParent<VRRig>();
//                    if (player != null)
//                    {
//                        VRRig.LocalRig.enabled = false;
//                        VRRig.LocalRig.transform.position = new Vector3(-51.4897f, 16.9286f, -120.1083f);

//                        bool didThing = false;
//                        foreach (Firecracker firecracker in GetFireCrackers())
//                        {
//                            if (firecracker.IsLocalObject())
//                            {
//                                didThing = true;
//                                if (Time.time > Garfield)
//                                {
//                                    Garfield = Time.time + 0.1f;
//                                    PhotonEvent Event = ((RubberDuckEvents)typeof(Firecracker).GetField("_events", BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance).GetValue(firecracker)).Activate;

//                                    for (int i = 0; i < 40; i++)
//                                    {
//                                        PhotonNetwork.RaiseEvent(176, new object[]
//                                        {
//                                            (int)Traverse.Create(Event).Field("_eventId").GetValue(),
//                                            new Vector3(-124.7134f, 16.4475f, -225.778f),
//                                            Quaternion.identity,
//                                            Vector3.zero,
//                                            1f
//                                        }, new RaiseEventOptions
//                                        {
//                                            TargetActors = new int[] { player.Creator.ActorNumber }
//                                        }, new SendOptions
//                                        {
//                                            Reliability = false,
//                                            Encrypt = true
//                                        });
//                                    }

//                                    RPCProtection.SkiddedRPCProtection();

//                                }
//                            }
//                        }
//                        if (!didThing)
//                        {
//                            CosmeticsController.instance.ApplyCosmeticItemToSet(CosmeticsController.instance.currentWornSet, CosmeticsController.instance.GetItemFromDict("LMANZ."), true, false);
//                            CosmeticsController.instance.ApplyCosmeticItemToSet(VRRig.LocalRig.tryOnSet, CosmeticsController.instance.GetItemFromDict("LMANZ."), true, false);
//                            CosmeticsController.instance.UpdateWornCosmetics(PhotonNetwork.InRoom);
//                            archivefirecrackers = null;
//                            RPCProtection.SkiddedRPCProtection();
//                        }
//                        return;
//                    }
//                    return;
//                }
//                else
//                {
//                    if (!VRRig.LocalRig.enabled)
//                        VRRig.LocalRig.enabled = true;
//                }

//                if (radiusLine != null)
//                {
//                    UnityEngine.Object.Destroy(radiusLine);
//                    radiusLine = null;
//                    return;
//                }
//            }
//            else
//            {
//                UnityEngine.Object.Destroy(this.GetComponent<CrashGun>());
//                if (pointer != null)
//                {
//                    UnityEngine.Object.Destroy(pointer);
//                }
//            }
//        }
//        public static Firecracker[] GetFireCrackers()
//        {
//            if (Time.time > Garfield)
//            {
//                archivefirecrackers = null;
//                Garfield = Time.time + 5f;
//            }
//            if (archivefirecrackers == null)
//            {
//                archivefirecrackers = UnityEngine.Object.FindObjectsOfType<Firecracker>();
//            }
//            return archivefirecrackers.ToArray();
//        }
//    }
//}
