﻿using Colossal.Menu;
using Colossal.Patches;
using ExitGames.Client.Photon;
using GorillaNetworking;
using HarmonyLib;
using Photon.Pun;
using Photon.Realtime;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using UnityEngine.XR;

namespace Colossal.Mods
{
    public class AlwaysGuardian : MonoBehaviour
    {
        public static TappableGuardianIdol[] GI = null;
        public void Start()
        {
            GI = UnityEngine.Object.FindObjectsOfType<TappableGuardianIdol>();
        }
        public void Update()
        {
            if (PluginConfig.alwaysguardian)
            {
                GorillaGuardianManager gman = GameObject.Find("GT Systems/GameModeSystem/Gorilla Guardian Manager").GetComponent<GorillaGuardianManager>();
                if (!gman.IsPlayerGuardian(NetworkSystem.Instance.LocalPlayer))
                {
                    foreach (TappableGuardianIdol tgi in GI)
                    {
                        if (tgi.enabled && tgi.isActivationReady)
                        {
                            if (VRRig.LocalRig.enabled)
                            {
                                VRRig.LocalRig.enabled = false;
                            }

                            VRRig.LocalRig.transform.position = tgi.transform.position;

                            VRRig.LocalRig.leftHand.rigTarget.transform.rotation = Quaternion.Euler(new Vector3(UnityEngine.Random.Range(0f, 1f), UnityEngine.Random.Range(0f, 1f), UnityEngine.Random.Range(0f, 1f)));
                            VRRig.LocalRig.rightHand.rigTarget.transform.rotation = Quaternion.Euler(new Vector3(UnityEngine.Random.Range(0f, 1f), UnityEngine.Random.Range(0f, 1f), UnityEngine.Random.Range(0f, 1f)));

                            VRRig.LocalRig.leftHand.rigTarget.transform.position = VRRig.LocalRig.transform.position + VRRig.LocalRig.leftHand.rigTarget.transform.forward * 3f;
                            VRRig.LocalRig.rightHand.rigTarget.transform.position = VRRig.LocalRig.transform.position + VRRig.LocalRig.rightHand.rigTarget.transform.forward * 3f;

                            tgi.OnTap(UnityEngine.Random.Range(0.2f, 0.4f));
                            RPCProtection.SkiddedRPCProtection();
                        }
                    }
                }
                else if (!VRRig.LocalRig.enabled)
                {
                    VRRig.LocalRig.enabled = true;
                }
            }
            else
            {
                if (!VRRig.LocalRig.enabled)
                {
                    VRRig.LocalRig.enabled = true;
                }
                Destroy(this.GetComponent<AlwaysGuardian>());
            }
        }
    }
}
