﻿using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Colossal.Menu;
using Photon.Pun;
using UnityEngine;

namespace Colossal.Mods
{
    public class KickAll : MonoBehaviour
    {
        public GorillaGuardianManager gman;
        public void Start()
        {
            gman = GameObject.Find("GT Systems/GameModeSystem/Gorilla Guardian Manager").GetComponent<GorillaGuardianManager>();

            if (PhotonNetwork.LocalPlayer.IsMasterClient)
            {
                GameObject.Find("Environment Objects/05Maze_PersistentObjects/GuardianZoneManagers/GuardianZoneManager_Forest").GetComponent<GorillaGuardianZoneManager>().SetGuardian(PhotonNetwork.LocalPlayer);
            }

            if (gman.IsPlayerGuardian(NetworkSystem.Instance.LocalPlayer))
                StartCoroutine(Kick());
            else
            {
                PhotonNetwork.CurrentRoom.IsOpen = true;
                PhotonNetwork.CurrentRoom.IsVisible = true;
            }
        }
        public void Update()
        {
            if (!PluginConfig.kickall)
            {
                PhotonNetwork.CurrentRoom.IsOpen = false;
                PhotonNetwork.CurrentRoom.IsVisible = false;

                Destroy(this.GetComponent<KickAll>());
            }
        }
        private IEnumerator Kick()
        {
            PluginConfig.graball = true;


            if (VRRig.LocalRig.enabled)
                VRRig.LocalRig.enabled = false;

            foreach (MeshCollider collider in Resources.FindObjectsOfTypeAll<MeshCollider>())
                collider.enabled = false;

            PhotonNetwork.CurrentRoom.IsOpen = true;
            PhotonNetwork.CurrentRoom.IsVisible = true;


            VRRig.LocalRig.transform.position = new Vector3(-66.7149f, 12.4107f, -79.1399f);
            yield return new WaitForSeconds(3);

            //VRRig.LocalRig.transform.position = new Vector3(-66.1808f, 12.3377f, -83.3426f);

            //yield return new WaitForSeconds(1);

            //VRRig.LocalRig.transform.position = new Vector3(-68.6175f, 12.1777f, -85.4391f);

            //yield return new WaitForSeconds(1);

            //VRRig.LocalRig.transform.position = new Vector3(-71.9294f, 12.1786f, -91.3277f);

            //yield return new WaitForSeconds(1);

            //VRRig.LocalRig.transform.position = new Vector3(-77.3606f, 11.9915f, -94.0314f);

            //yield return new WaitForSeconds(1);

            foreach (MeshCollider collider in Resources.FindObjectsOfTypeAll<MeshCollider>())
                collider.enabled = true;

            if (!VRRig.LocalRig.enabled)
                VRRig.LocalRig.enabled = true;


            PluginConfig.kickall = false;
        }
    }
}
